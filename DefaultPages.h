/*
 * MIME TYPES:
 *  .css          - text/css
 *  .html or .htm - text/html
 *  .js           - text/javascript
 *  .json         - application/json
 */
#include <Arduino_JSON.h>

JSONVar objCommands;

String strBanner =  "\n\n"
                    "#########################\n"
                    "ESP8266 Server Foundation\n"
                    "                  MPU6050\n"
                    "#########################\n";

String strWiFiCfgExample =  "{"
                            "\"enableStation\":true,"
                            "\"WiFiConnection\":["
                            "{"
                            "\"ssid\":\"ConnectToNetwork\","
                            "\"password\":\"Password\","
                            "\"connect\":true,"
                            "\"hostname\":\"\""
                            "}"
                            "],"
                            "\"enableAP\":true,"
                            "\"softAP\":{"
                            "\"ssid\":\"\","
                            "\"psk\":\"\","
                            "\"channel\":1,"
                            "\"hidden\":true,"
                            "\"max_connection\":4"
                            "}"
                            "}";
String strRestartESP = "<html><head><meta http-equiv=\"refresh\" content=\"20;url=/\" /></head><body><p>Restarting.....</p></body></html>";

String strRedirectToRootHTML = "<html><head><meta http-equiv=\"refresh\" content=\"0;url=/\" /></head><body><p>Redirecting.....</p></body></html>";

String strHttpStyles = "<style>" "\n"
                       ".link { color: blue; text-decoration: none; font-size:5vw; float: left; clear: left;}" "\n"
                       ".link:hover { color: green; }" "\n"
                       "textarea[id=filecontent] { height: 80%; width: 100%; }" "\n" 
                       "</style>" "\n";
String strHttpResponseHead = "<html><head><title>Device Management</title>" + strHttpStyles + "" "\n"
                             "<meta http-equiv='Cache-Control' content='no-cache, no-store, must-revalidate' />" "\n"
                             "<meta http-equiv='Pragma' content='no-cache' />" "\n"
                             "<meta http-equiv='Expires' content='0' />" "\n"
                             "</head>" "\n";
String strHttpResponseFoot = "</html>" "\n";

String strRootHTML = strHttpResponseHead + "<body>" "\n"
                     "<script>" "\n"
                     "function Go()" "\n"
                     "{" "\n"
                     "goButton.href=selector.value;" "\n"
                     "}" "\n"
                     "</script>" "\n"
                     "<style>" "\n"
                     "a[id=goButton] {font-size: 8em; text-decoration: none; border: 3px solid grey; border-radius: 20%;}" "\n"
                     "p {text-align: center;}" "\n"
                     "select[id=selector] {font-size: 4em; width: 40vw;}" "\n"
                     "div[id=container] {position: absolute;top: 50%;left: 50%;transform: translate(-50%,-50%);}" "\n"
                     "ul[id=dropmenu] {display: none;}" "\n"
                     "</style>" "\n"
                     "<div id='container'>" "\n"
                     "<p>" "\n"
                     "<select id='selector'>" "\n"
                     "<option value='/api/deletespiffsfile' title='Usage:file=[filename]'>Delete SPIFFS File</option>" "\n"
                     "<option value='/applications/editspiffsfile'>Edit SPIFFS File</option>" "\n"
                     "<option value='/api/formatspiffs'>Format SPIFFS</option>" "\n"
                     "<option value='/api/getdata'>Get Data</option>" "\n"
                     "<option value='/api/listspiffs'>List SPIFFS</option>" "\n"
                     "<option value='/api/readeeprom'>Read EEPROM</option>" "\n"
                     "<option value='/api/readspiffsfile' title='Usage:?file=[filename]'>Read SPIFFS File</option>" "\n"
                     "<option value='/api/restartesp'>Restart Device</option>" "\n"
                     "<option value='/api/scannetworks'>Scan Networks</option>" "\n"
                     "<option value='/applications/websocket' selected>Websocket</option>" "\n"
                     "</select>" "\n"
                     "</p>" "\n"
                     "<p>" "\n"
                     "<a href='javascript:void(0);' id='goButton' onclick='javascript:Go();'>Go</a>" "\n"
                     "</p>" "\n"
                     "</div>" "\n"
                     "<ul id='dropmenu'>" "\n"
                     "<li>&nbsp;" "\n"
                     "<ul>" "\n"
                     "<li>api" "\n"
                     "<ul>" "\n"
                     "<li><a href='/api/deletespiffsfile'>Delete SPIFFS File</a></li>" "\n"
                     "<li><a href='/api/formatspiffs'>Format SPIFFS</a></li>" "\n"
                     "<li><a href='/api/getdata'>Get Data</a></li>" "\n"
                     "<li><a href='/api/listspiffs'>List SPIFFS</a></li>" "\n"
                     "<li><a href='/api/readeeprom'>Read EEPROM</a></li>" "\n"
                     "<li><a href='/api/readspiffsfile'>Read SPIFFS File</a></li>" "\n"
                     "<li><a href='/api/restartesp'>Restart Device</a></li>" "\n"
                     "<li><a href='/api/scannetworks'>Scan Networks</a></li>" "\n"
                     "</ul>" "\n"
                     "</li>" "\n"
                     "<li>applications" "\n"
                     "<ul>" "\n"
                     "<li><a href='/applications/editspiffsfile'>Edit SPIFFS File</a></li>" "\n"
                     "<li><a href='/applications/websocket'>Web Socket</a></li>" "\n"
                     "</ul>" "\n"
                     "</li>" "\n"
                     "</ul>" "\n"
                     "</li>" "\n"
                     "</ul>" "\n"
                     "</body>" "\n" + strHttpResponseFoot;

String strEditSPIFFSfile = strHttpResponseHead + "<body><script type='text/javascript'>" "\n"
                "  function fnGetSPIFFSdir()" "\n"
                "  {" "\n"
                "    let http = new XMLHttpRequest();" "\n"
                "    let url = '/api/listspiffs';" "\n"
                "    http.open('GET', url, true);" "\n"
                "    http.onreadystatechange = function()" "\n"
                "      {" "\n"
                "        if(http.readyState == 4 && http.status == 200)" "\n"
                "          {" "\n"
                "            let dlSf = document.getElementById('SPIFFSfiles');" "\n"
                "            dlSf.innerHTML = '';" "\n"
                "            let sd = JSON.parse(http.responseText);" "\n"
                "            for (let i = 0; i < sd.file.length; i++)" "\n"
                "              {" "\n"
                "                let x_op = document.createElement('option');" "\n"
                "                x_op.value = sd.file[i].fileName;" "\n"
                "                dlSf.appendChild(x_op);" "\n"
                "              }" "\n"
                "          }" "\n"
                "        }" "\n"
                "    http.send();" "\n"
                "  }" "\n"
                "" "\n"
                "  function fnGetFile()" "\n"
                "  {" "\n"
                "    let inputValue = document.getElementById('filename').value;" "\n"
                "    let x = document.getElementById('SPIFFSfiles');" "\n"
                "    for (let i = 0; i < x.options.length; i++)" "\n"
                "    {" "\n"
                "      optionValue = x.options[i].value;" "\n"
                "      if (optionValue == inputValue)" "\n"
                "      {" "\n"
                "        let http = new XMLHttpRequest();" "\n"
                "        let url = '/api/readspiffsfile';" "\n"
                "        let params = 'file=' + inputValue;" "\n"
                "        http.open('POST', url, true);" "\n"
                "        http.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');" "\n"
                "        http.onreadystatechange = function()" "\n"
                "        {" "\n"
                "          if(http.readyState == 4 && http.status == 200)" "\n"
                "          {" "\n"
                "            let jc = JSON.parse(http.responseText);" "\n"
                "            document.getElementById('filecontent').value = jc.content;" "\n"
                "          }" "\n"
                "        }" "\n"
                "        http.send(params);" "\n"
                "      }" "\n"
                "    }" "\n"
                "  }" "\n"
                "" "\n"
                "  function fnDeleteFile()" "\n"
                "  {" "\n"
                "    let inputValue = document.getElementById('filename').value;" "\n"
                "    let http = new XMLHttpRequest();" "\n"
                "    let url = '/api/deletespiffsfile';" "\n"
                "    let params = 'file=' + inputValue;" "\n"
                "    http.open('POST', url, true);" "\n"
                "    http.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');" "\n"
                "    http.onreadystatechange = function()" "\n"
                "     {" "\n"
                "      if(http.readyState == 4 && http.status == 200)" "\n"
                "       {" "\n"
                "        let jc = JSON.parse(http.responseText);" "\n"
                "        alert(http.responseText);" "\n"
                "       }" "\n"
                "     }" "\n"
                "    http.send(params);" "\n"
                "  }" "\n"
                "" "\n"
                "  function fnSaveFile()" "\n"
                "  {" "\n"
                "    let x_filename = document.getElementById('filename').value;" "\n"
                "    let x_content = document.getElementById('filecontent').value;" "\n"
                "    let http = new XMLHttpRequest();" "\n"
                "    let url = '/api/savespiffsfile';" "\n"
                "    let params = {" "\n"
                "                   fileName : x_filename," "\n"
                "                   content : x_content" "\n"
                "                 };" "\n"
                "    http.open('POST', url, true);" "\n"
                "    http.setRequestHeader('Content-type', 'application/json');" "\n"
                "    http.onreadystatechange = function()" "\n"
                "    {" "\n"
                "      if(http.readyState == 4 && http.status == 200)" "\n"
                "      {" "\n"
                "        alert(http.responseText);" "\n"
                "      }" "\n"
                "    }" "\n"
                "    http.send(JSON.stringify(params));" "\n"
                "  }" "\n"
                "  fnGetSPIFFSdir();" "\n"
                "</script>" "\n"
                "<datalist id=SPIFFSfiles>" "\n"
                "</datalist>" "\n"
                "<p>File: <input id='filename' size=60 type=text value='' list=SPIFFSfiles oninput='fnGetFile();'> <input id='btnRefresh' type='button' value='Refresh' onclick='fnGetSPIFFSdir();' /></p>" "\n"
                "<textarea id='filecontent'>" "\n"
                "</textarea>" "\n"
                "<p>&nbsp;</p><p>&nbsp;</p><p><input id='btnDelete' type='button' value='Delete' onclick='fnDeleteFile();'/>  <input id='btnSave' type='button' value='Save' onclick='fnSaveFile()' /></p>" "\n"
                "</body>" "\n" + strHttpResponseFoot;

String strWebSocketHTML = "<html lang='en'>" "\n"
                          "  <head>" "\n"
                          "<style>" "\n"
                          ".statusButton {" "\n"
                          "background-image: linear-gradient(rgb(53, 97, 160) 41%, rgb(51, 95, 158) 47%, rgb(43, 87, 150) 54%);" "\n"
                          "border: 1px solid white; border-top-left-radius: 8px; border-top-right-radius: 8px; border-bottom-left-radius: 8px;" "\n"
                          "border-bottom-right-radius: 8px; height: 28px; font-weight: bold; padding-left: 20px; padding-right: 20px;" "\n"
                          "color: white; text-decoration: none; cursor: pointer;" "\n"
                          "}" "\n"
                          ".statusButton:hover { color: #FFED64; }" "\n"
                          "div.axis_container {position: relative; width: 45vmin; height: 45vmin;}" "\n"
                          "div.axis_container > div { position: absolute; }" "\n"
                          "div.axis_label { font-weight: bold; }" "\n"
                          "div.axis_dial {width: 100%; height: 100%; border: 3px dotted grey; border-radius: 50%;}" "\n"
                          "div.axis_reticle {width: 100%;height: 100%;left: 3px;top: 3px;background-color: grey;" "\n"
                          "   clip-path: polygon(49% 0%, 51% 0%, 51% 49%, 100% 49%, 100% 51%, 51% 51%, 51% 100%, 49% 100%, 49% 51%, 0% 51%, 0% 49%, 49% 49%);}" "\n"
                          "div[id=x_axis_indicator] {width: 100%;height: 100%;left: 3px;top: 3px;transform: rotate(00deg);transform-origin: center;}" "\n"
                          "div.axis_level {position: absolute; width: 100%; height: 100%; background-color: red; clip-path: polygon(0% 49%, 100% 49%, 100% 51%, 0% 51%);}" "\n"
                          "div.axis_label_left {position: absolute; top: 40%; text-align: left; font-weight: bold; font-size: 1em;}" "\n"
                          "div.axis_label_right {position: absolute; right: 0%; top: 40%; text-align: left; font-weight: bold; font-size: 1em;}" "\n"
                          "div.axis_degree {bottom: -6px; right: 35%; width: 30%; text-align: right; font-weight: bold; font-size: 3em; background-color: white;}" "\n"
                          "div[id=y_axis_indicator] {width: 100%; height: 100%; left: 3px; top: 3px; transform: rotate(00deg); transform-origin: center;}" "\n"
                          "textarea[id=filecontent]{ height: 80%; width: 100%;}" "\n" 
                          "</style>" "\n"
                          "    <script>" "\n"
                          "      let x_offsetX = 0;" "\n"
                          "      let x_offsetY = 0;" "\n"
                          "      let x_averageX = new Array(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);" "\n"
                          "      let x_averageY = new Array(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);" "\n"
                          "      function fnGetCalibration()" "\n"
                          "        {" "\n"
                          "          let http = new XMLHttpRequest();" "\n"
                          "          let url = '/api/readspiffsfile';" "\n"
                          "          let params = 'file=calibration.cfg';" "\n"
                          "          http.open('POST', url, true);" "\n"
                          "          http.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');" "\n"
                          "          http.onreadystatechange = function()" "\n"
                          "            {" "\n"
                          "              if(http.readyState == 4 && http.status == 200)" "\n"
                          "                {" "\n"
                          "                  let jf = JSON.parse(http.responseText);" "\n"
                          "                  let jc = JSON.parse(jf.content);" "\n"
                          "                  x_offsetX = jc.offsetX;" "\n"
                          "                  x_offsetY = jc.offsetY;" "\n"
                          "                }" "\n"
                          "            }" "\n"
                          "          http.send(params);" "\n"
                          "        }" "\n"
                          "      fnGetCalibration();" "\n"
                          "      socket = new WebSocket('ws:/' + '/' + location.host + ':81');" "\n"
                          "      socket.onopen = function(e) { document.getElementById('socket_host').innerHTML = location.host; };" "\n"
                          "      socket.onerror = function(e) { document.getElementById('socket_host').innerHTML = 'socket error'; };" "\n"
                          "      socket.onmessage = function(e)" "\n"
                          "        {" "\n"
                          "          x_data = JSON.parse(e.data);" "\n"
                          "          x_anglex = (Math.atan(x_data.accelleration.x/Math.sqrt((x_data.accelleration.y*x_data.accelleration.y) + (x_data.accelleration.z*x_data.accelleration.z)))) * (180/Math.PI);" "\n"
                          "          x_anglex = x_anglex + x_offsetX;" "\n"
                          "          x_angley = (Math.atan(x_data.accelleration.y/Math.sqrt((x_data.accelleration.x*x_data.accelleration.x) + (x_data.accelleration.z*x_data.accelleration.z)))) * (180/Math.PI);" "\n"
                          "          x_angley = x_angley + x_offsetY;" "\n"
                          "          x_averageX.shift();" "\n"
                          "          x_averageX.push(x_anglex);" "\n"
                          "          x_averageY.shift();" "\n"
                          "          x_averageY.push(x_angley);" "\n"
                          "          let loopx = 0;" "\n"
                          "          for (x_loop = 0; x_loop < x_averageX.length; x_loop++)" "\n"
                          "            { loopx += x_averageX[x_loop]; }" "\n"
                          "          x_anglex = loopx / x_averageX.length;" "\n"
                          "          let loopy = 0;" "\n"
                          "          for (x_loop = 0; x_loop < x_averageY.length; x_loop++)" "\n"
                          "            { loopy += x_averageY[x_loop]; }" "\n"
                          "          x_angley = loopy / x_averageY.length;" "\n"
                          "          x_f = (x_data.temperature * 1.8) + 32;" "\n"
                          "          x_rotate = x_anglex.toFixed(1).toString() + 'deg';" "\n"
                          "          y_rotate = x_angley.toFixed(1).toString() + 'deg';" "\n"
                          "          document.getElementById('x_axis_degree').innerHTML = x_anglex.toFixed(1) + '&deg;'\n"
                          "          document.getElementById('y_axis_degree').innerHTML = x_angley.toFixed(1) + '&deg;'\n"
                          "          document.getElementById('x_axis_indicator').style.transform = 'rotate(' + x_rotate + ')';" "\n"
                          "          document.getElementById('y_axis_indicator').style.transform = 'rotate(' + y_rotate + ')';" "\n"
                          "          document.getElementById('raw_data').innerHTML = e.data;" "\n"
                          "        };" "\n"
                          "      document.getElementById('socket_host').innerHTML = location.host;" "\n"
                          "    </script>" "\n"
                          "  </head>" "\n"
                          "  <body>" "\n"
                          "    <div class='axis_container'>" "\n"
                          "      <div class='axis_label'>X Axis</div>" "\n"
                          "      <div class='axis_dial'></div>" "\n"
                          "      <div class='axis_reticle'></div>" "\n"
                          "      <div id='x_axis_indicator'>" "\n"
                          "        <div class='axis_level'></div>" "\n"
                          "        <div class='axis_label_left'>Left</div>" "\n"
                          "        <div class='axis_label_right'>Right</div>" "\n"
                          "      </div>" "\n"
                          "      <div id='x_axis_degree' class='axis_degree'>00&deg;</div>" "\n"
                          "    </div>" "\n"
                          "    <div class='axis_container'>" "\n"
                          "      <div class='axis_label'>Y Axis</div>" "\n"
                          "      <div class='axis_dial'></div>" "\n"
                          "      <div class='axis_reticle'></div>" "\n"
                          "      <div id='y_axis_indicator'>" "\n"
                          "        <div class='axis_level'></div>" "\n"
                          "        <div class='axis_label_left'>Back</div>" "\n"
                          "        <div class='axis_label_right'>Front</div>" "\n"
                          "      </div>" "\n"
                          "      <div id='y_axis_degree' class='axis_degree'>00&deg;</div>" "\n"
                          "    </div>" "\n"
                          "    <p><div><b>socket host:&nbsp;</b><span id='socket_host'></span></div></p>" "\n"
                          "    <div>Raw Data</div>" "\n"
                          "    <div id='raw_data'></div>" "\n"
                          "  </body>" "\n"
                          "</html>";
